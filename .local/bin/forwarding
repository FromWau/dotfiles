#!/bin/bash

# Ensure required packages are installed
if ! command -v fzf &>/dev/null; then
    echo "fzf is not installed. Install it with: sudo pacman -S fzf"
    exit 1
fi

if ! command -v dnsmasq &>/dev/null; then
    echo "dnsmasq is not installed. Install it with: sudo pacman -S dnsmasq"
    exit 1
fi

# Handle Ctrl+C (SIGINT)
cleanup() {
    echo -e "\nScript interrupted. Exiting cleanly..."
    exit 1
}
trap cleanup SIGINT

# Function to select network interfaces with fzf
select_interface() {
    local prompt_msg=$1
    local interface=$(ip -o link show | awk -F': ' '{print $2}' | fzf --prompt="$prompt_msg: " --exit-0 --cycle -i --reverse -1)

    if [[ -z "$interface" ]]; then
        echo "No interface selected. Exiting..."
        exit 1
    fi

    echo "$interface"
}

# Prompt user for action using fzf
ACTION=$(echo -e "Enable Forwarding\nDisable Forwarding" | fzf --prompt="Select Action: " --exit-0 --cycle -i --reverse -1)

if [[ -z "$ACTION" ]]; then
    echo "No action selected. Exiting..."
    exit 1
fi

# Select network interfaces
SOURCE_IF=$(select_interface "Select source interface")
echo "Selected Source: $SOURCE_IF"

TARGET_IF=$(select_interface "Select target interface")
echo "Selected Target: $TARGET_IF"

# Function to enable internet forwarding
enable_forwarding() {
    echo "Enabling IP forwarding..."
    echo 1 | sudo tee /proc/sys/net/ipv4/ip_forward >/dev/null
    sudo sysctl -w net.ipv4.ip_forward=1

    echo "Setting up iptables NAT rules..."
    if ! sudo iptables -t nat -C POSTROUTING -o "$SOURCE_IF" -j MASQUERADE 2>/dev/null; then
        sudo iptables -t nat -A POSTROUTING -o "$SOURCE_IF" -j MASQUERADE
    fi

    if ! sudo iptables -C FORWARD -i "$TARGET_IF" -o "$SOURCE_IF" -j ACCEPT 2>/dev/null; then
        sudo iptables -A FORWARD -i "$TARGET_IF" -o "$SOURCE_IF" -j ACCEPT
    fi

    if ! sudo iptables -C FORWARD -i "$SOURCE_IF" -o "$TARGET_IF" -m state --state RELATED,ESTABLISHED -j ACCEPT 2>/dev/null; then
        sudo iptables -A FORWARD -i "$SOURCE_IF" -o "$TARGET_IF" -m state --state RELATED,ESTABLISHED -j ACCEPT
    fi

    echo "Assigning static IP to $TARGET_IF..."
    sudo ip addr flush dev "$TARGET_IF"
    sudo ip addr add 192.168.2.1/24 dev "$TARGET_IF"

    echo "Configuring DHCP server..."
    if ! grep -q "interface=$TARGET_IF" /etc/dnsmasq.conf; then
        echo -e "interface=$TARGET_IF\ndhcp-range=192.168.2.100,192.168.2.200,12h" | sudo tee -a /etc/dnsmasq.conf >/dev/null
    fi

    echo "Restarting DHCP server and NetworkManager..."
    sudo systemctl restart dnsmasq
    sudo systemctl restart NetworkManager

    echo "Internet sharing activated!"
}

# Function to disable internet forwarding
disable_forwarding() {
    echo "Disabling IP forwarding..."
    echo 0 | sudo tee /proc/sys/net/ipv4/ip_forward >/dev/null
    sudo sysctl -w net.ipv4.ip_forward=0

    echo "Flushing iptables rules..."
    sudo iptables -t nat -D POSTROUTING -o "$SOURCE_IF" -j MASQUERADE 2>/dev/null || true
    sudo iptables -D FORWARD -i "$TARGET_IF" -o "$SOURCE_IF" -j ACCEPT 2>/dev/null || true
    sudo iptables -D FORWARD -i "$SOURCE_IF" -o "$TARGET_IF" -m state --state RELATED,ESTABLISHED -j ACCEPT 2>/dev/null || true

    echo "Removing static IP from $TARGET_IF..."
    sudo ip addr flush dev "$TARGET_IF"

    echo "Removing $TARGET_IF entry from dnsmasq.conf..."
    sudo sed -i "/interface=$TARGET_IF/d" /etc/dnsmasq.conf
    sudo sed -i "/dhcp-range=192.168.2.100,192.168.2.200,12h/d" /etc/dnsmasq.conf

    echo "Restarting DHCP server and NetworkManager..."
    sudo systemctl restart dnsmasq
    sudo systemctl restart NetworkManager

    echo "Internet sharing disabled!"
}

# Execute action based on selection
if [[ "$ACTION" == "Enable Forwarding" ]]; then
    enable_forwarding
elif [[ "$ACTION" == "Disable Forwarding" ]]; then
    disable_forwarding
else
    echo "Invalid action selected. Exiting..."
    exit 1
fi
