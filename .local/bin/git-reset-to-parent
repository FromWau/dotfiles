#!/usr/bin/env bash

set -e # Exit on any error

# Function to get the current parent branch
get_parent_branch() {
    local current_branch="$1"
    local parent_branches
    parent_branches=$(git log --oneline | rg -o "Merge .* into $current_branch" | cut -d "'" -f2 | awk '!seen[$0]++')

    if [ "$(echo "$parent_branches" | wc -l)" -gt 1 ]; then
        echo "$(echo "$parent_branches" | fzf --prompt="Select parent branch: ")"
    elif [ -n "$parent_branches" ]; then
        echo "$parent_branches"
    else
        echo ""
    fi
}

# Function to stash changes if any exist
stash_changes() {
    if git status --porcelain | grep -q .; then
        # Stash changes and suppress the output
        git stash push -m "Backup before resetting files." &>/dev/null
        echo "üîí Your local changes have been stashed."
        return 0
    else
        echo "‚úÖ No local changes to stash."
        return 1
    fi
}

# Function to get the list of modified files between the current and parent branch
get_files_to_reset() {
    local parent_branch="$1"
    git diff "$parent_branch" --name-only
}

# Function to reset or delete selected files
reset_files() {
    local parent_branch="$1"
    local selected_files="$2"

    reset_count=0
    deleted_count=0

    for file in $selected_files; do
        if git checkout "$parent_branch" -- "$file"; then
            reset_count=$((reset_count + 1))
            echo "‚úÖ Reset $file to its parent version."
        else
            deleted_count=$((deleted_count + 1))
            git rm --cached "$file"
            echo "‚ö†Ô∏è File not found in parent branch. Deleting file."
        fi
    done

    echo "üîß Summary: Reset $reset_count file(s), deleted $deleted_count file(s)."
}

# Function to pop the stash if it was created
pop_stash() {
    if git stash list | grep -q "Backup before resetting files"; then
        echo "üîÑ Popping the stash..."
        git stash pop &>/dev/null || echo "No stash to pop or error occurred."
        echo "üîÑ Your stashed changes have been restored."
    fi
}

# Main script

current_branch=$(git branch --show-current)

# Get the parent branch
parent_branch=$(get_parent_branch "$current_branch")

if [ -z "$parent_branch" ]; then
    echo "‚ùå No parent branch found."
    exit 1
fi

# Stash changes if any
stash_changes && stash_created=true || stash_created=false

# Get the files to reset
files=$(get_files_to_reset "$parent_branch")

if [ -z "$files" ]; then
    echo "‚úÖ No modified files found."
else
    # Ensure colors display correctly in fzf
    export LESS=-R

    # Check if delta is installed
    if command -v delta &>/dev/null; then
        diff_cmd="git diff --color=always $parent_branch -- {} | delta --paging=never --width=$(tput cols)"
    else
        diff_cmd="git diff --color=always $parent_branch -- {}"
    fi

    # Select files using fzf with delta preview
    selected_files=$(echo "$files" | fzf --cycle -i -m --reverse \
        --prompt="Select files to reset: " \
        --preview "$diff_cmd" \
        --preview-window=right:70%:wrap ||
        true)

    if [ -z "$selected_files" ]; then
        echo "‚ö†Ô∏è No files selected."
    else
        reset_files "$parent_branch" "$selected_files"
    fi
fi

# Pop the stash if created
if [ "$stash_created" = true ]; then
    pop_stash
fi
